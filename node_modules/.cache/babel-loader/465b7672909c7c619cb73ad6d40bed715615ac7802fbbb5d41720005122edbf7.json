{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/react/arithmetic/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  mode,\n  operations,\n  timeLimit,\n  questionCount,\n  maxDigits,\n  onGameOver,\n  onExit\n}) => {\n  _s();\n  const [problem, setProblem] = useState({});\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const generateMathProblem = (maxDigits, operations) => {\n    const availableOperators = [];\n    if (operations.addition) availableOperators.push('+');\n    if (operations.subtraction) availableOperators.push('-');\n    if (operations.multiplication) availableOperators.push('*');\n    if (operations.division) availableOperators.push('/');\n    const maxNumber = Math.pow(10, maxDigits) - 1;\n    const num1 = Math.floor(Math.random() * maxNumber) + 1;\n    const num2 = Math.floor(Math.random() * maxNumber) + 1;\n    const operator = availableOperators[Math.floor(Math.random() * availableOperators.length)];\n    let problem;\n    let answer;\n    if (operator === '/') {\n      let divisor, dividend;\n      do {\n        divisor = Math.floor(Math.random() * maxNumber) + 1;\n        dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n      } while (dividend > maxNumber || divisor > maxNumber);\n      problem = `${dividend} ${operator} ${divisor}`;\n      answer = dividend / divisor;\n    } else {\n      problem = `${num1} ${operator} ${num2}`;\n      answer = eval(problem); // Use eval cautiously\n    }\n    return {\n      problem,\n      answer\n    };\n  };\n  useEffect(() => {\n    setProblem(generateMathProblem(maxDigits, operations));\n    if (mode === 'time') {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            onGameOver(score);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (parseFloat(e.target.value) === problem.answer) {\n      if (mode === 'questions') {\n        setScore(timeLeft); // Set score to remaining time\n      } else {\n        setScore(prev => prev + 1); // Increment score normally\n      }\n      setQuestionsAnswered(prev => prev + 1);\n      setProblem(generateMathProblem(maxDigits, operations));\n      setUserInput('');\n    }\n  };\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(timeLeft);\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bt\",\n      onClick: onExit,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"depth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"content\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), \"Exit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-container\",\n      children: [mode === 'time' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 31\n      }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Questions Answered: \", questionsAnswered, \"/\", questionCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n          children: problem.problem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput,\n          onChange: handleInputChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"UnfBp1s9ZRWAQOSgf3GV/6/yFfY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Game","mode","operations","timeLimit","questionCount","maxDigits","onGameOver","onExit","_s","problem","setProblem","userInput","setUserInput","score","setScore","timeLeft","setTimeLeft","questionsAnswered","setQuestionsAnswered","generateMathProblem","availableOperators","addition","push","subtraction","multiplication","division","maxNumber","Math","pow","num1","floor","random","num2","operator","length","answer","divisor","dividend","eval","timer","setInterval","prev","clearInterval","handleInputChange","e","target","value","parseFloat","children","className","onClick","style","position","top","right","class","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","autoFocus","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\n\nconst Game = ({ mode, operations, timeLimit, questionCount, maxDigits, onGameOver, onExit }) => {\n    const [problem, setProblem] = useState({});\n    const [userInput, setUserInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(timeLimit);\n    const [questionsAnswered, setQuestionsAnswered] = useState(0);\n\n    const generateMathProblem = (maxDigits, operations) => {\n        const availableOperators = [];\n        if (operations.addition) availableOperators.push('+');\n        if (operations.subtraction) availableOperators.push('-');\n        if (operations.multiplication) availableOperators.push('*');\n        if (operations.division) availableOperators.push('/');\n      \n        const maxNumber = Math.pow(10, maxDigits) - 1;\n        const num1 = Math.floor(Math.random() * maxNumber) + 1;\n        const num2 = Math.floor(Math.random() * maxNumber) + 1;\n        const operator =\n          availableOperators[\n            Math.floor(Math.random() * availableOperators.length)\n          ];\n      \n        let problem;\n        let answer;\n      \n        if (operator === '/') {\n          let divisor, dividend;\n          do {\n            divisor = Math.floor(Math.random() * maxNumber) + 1;\n            dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n          } while (dividend > maxNumber || divisor > maxNumber);\n        \n          problem = `${dividend} ${operator} ${divisor}`;\n          answer = dividend / divisor;\n        } else {\n          problem = `${num1} ${operator} ${num2}`;\n          answer = eval(problem); // Use eval cautiously\n        }\n      \n        return { problem, answer };\n      };\n      \n\n  \n\n      useEffect(() => {\n        setProblem(generateMathProblem(maxDigits, operations));\n    \n        if (mode === 'time') {\n          const timer = setInterval(() => {\n            setTimeLeft((prev) => {\n              if (prev <= 1) {\n                clearInterval(timer);\n                onGameOver(score);\n              }\n              return prev - 1;\n            });\n          }, 1000);\n          return () => clearInterval(timer);\n        }\n      }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n\n      const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n        if (parseFloat(e.target.value) === problem.answer) {\n          if (mode === 'questions') {\n            setScore(timeLeft); // Set score to remaining time\n          } else {\n            setScore((prev) => prev + 1); // Increment score normally\n          }\n          setQuestionsAnswered((prev) => prev + 1);\n          setProblem(generateMathProblem(maxDigits, operations));\n          setUserInput('');\n        }\n      };\n    \n\n      useEffect(() => {\n        if (mode === 'questions' && questionsAnswered >= questionCount) {\n          onGameOver(timeLeft);\n        }\n      }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n    \n      return (\n        <div>\n          <button className=\"bt\" onClick={onExit} style={{ position: 'absolute', top: 10, right: 10 }}>\n            <span class=\"shadow\"></span>\n            <span class=\"depth\"></span>\n            <span class=\"content\">Exit</span>\n            Exit\n          </button>\n          <h2>Score: {score}</h2>\n\n          <div className=\"problem-container\">\n\n          {mode === 'time' && <h3>Time Left: {timeLeft}s</h3>}\n          {mode === 'questions' && (\n            <h3>Questions Answered: {questionsAnswered}/{questionCount}</h3>\n          )}\n          <div className=\"qcontainer\">\n          <p1>{problem.problem}</p1>\n          <input\n            type=\"number\"\n            value={userInput}\n            onChange={handleInputChange}\n            autoFocus\n          />\n          </div>\n\n          </div>\n\n        </div>\n      );\n    };\n    \n    export default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}