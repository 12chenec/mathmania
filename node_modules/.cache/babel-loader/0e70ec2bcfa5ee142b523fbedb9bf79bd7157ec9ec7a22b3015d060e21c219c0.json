{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/coding/mathmania/src/Game.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { createTimer } from 'animejs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  mode,\n  operations,\n  timeLimit,\n  questionCount,\n  maxDigits,\n  onGameOver,\n  onExit\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [problem, setProblem] = useState({});\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [timeUsed, setTimeUsed] = useState(0);\n  const generateMathProblem = (maxDigits, operations) => {\n    const availableOperators = [];\n    if (operations.addition) availableOperators.push('+');\n    if (operations.subtraction) availableOperators.push('-');\n    if (operations.multiplication) availableOperators.push('*');\n    if (operations.division) availableOperators.push('/');\n    const maxNumber = Math.pow(10, maxDigits) - 1;\n    const num1 = Math.floor(Math.random() * maxNumber) + 1;\n    const num2 = Math.floor(Math.random() * maxNumber) + 1;\n    const operator = availableOperators[Math.floor(Math.random() * availableOperators.length)];\n    let problem;\n    let answer;\n    if (operator === '/') {\n      let divisor, dividend;\n      do {\n        divisor = Math.floor(Math.random() * maxNumber) + 1;\n        dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n      } while (dividend > maxNumber || divisor > maxNumber);\n      problem = `${dividend} ${operator} ${divisor}`;\n      answer = dividend / divisor;\n    } else {\n      problem = `${num1} ${operator} ${num2}`;\n      answer = eval(problem); // Use eval cautiously\n    }\n    return {\n      problem,\n      answer\n    };\n  };\n  useEffect(() => {\n    setProblem(generateMathProblem(maxDigits, operations));\n    if (mode === 'time') {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            onGameOver(score);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n  const handleInputChange = e => {\n    _s();\n    setUserInput(e.target.value);\n    if (parseFloat(e.target.value) === problem.answer) {\n      const endTime = Date.now();\n      const timeUsed = (endTime - startTime) / 1000; // Time used in seconds\n      setTimeUsed(timeUsed);\n      if (mode === 'questions') {\n        const [status, setStatus] = useState('false');\n        const [currentTime, setCurrentTime] = useState(0);\n        createTimer({\n          duration: 2000,\n          onComplete: self => $status.innerHTML = 'true',\n          onUpdate: self => $time.innerHTML = self.currentTime\n        });\n        setScore(prev => parseFloat((prev + timeUsed).toFixed(2))); // Accumulate time used as score and round to two decimal points\n      } else {\n        setScore(prev => prev + 1); // Increment score normally\n      }\n      setQuestionsAnswered(prev => prev + 1);\n      setProblem(generateMathProblem(maxDigits, operations));\n      setUserInput('');\n      setStartTime(Date.now()); // Reset start time for the next question\n    }\n  };\n  _s(handleInputChange, \"goT5JqOdO2aBFCrRi09WXtRLTus=\");\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(score);\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bt\",\n      onClick: onExit,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"depth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"content\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \"Exit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Used: \", timeUsed, \"s \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 32\n    }, this), mode === 'time' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-container\",\n      children: [mode === 'time' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"large row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              class: \"large log row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"label\",\n                children: \"completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"status value\",\n                children: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              class: \"large log row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"label\",\n                children: \"current time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"time value lcd\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Questions Answered: \", questionsAnswered, \"/\", questionCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n          children: problem.problem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput,\n          onChange: handleInputChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game, \"HIX3zTDbq0kDjTVlnQ6CKdyoIUI=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","createTimer","jsxDEV","_jsxDEV","Game","mode","operations","timeLimit","questionCount","maxDigits","onGameOver","onExit","_s2","_s","$RefreshSig$","problem","setProblem","userInput","setUserInput","score","setScore","timeLeft","setTimeLeft","questionsAnswered","setQuestionsAnswered","startTime","setStartTime","Date","now","timeUsed","setTimeUsed","generateMathProblem","availableOperators","addition","push","subtraction","multiplication","division","maxNumber","Math","pow","num1","floor","random","num2","operator","length","answer","divisor","dividend","eval","timer","setInterval","prev","clearInterval","handleInputChange","e","target","value","parseFloat","endTime","status","setStatus","currentTime","setCurrentTime","duration","onComplete","self","$status","innerHTML","onUpdate","$time","toFixed","children","className","onClick","style","position","top","right","class","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","autoFocus","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/coding/mathmania/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { createTimer } from 'animejs';\n\nconst Game = ({ mode, operations, timeLimit, questionCount, maxDigits, onGameOver, onExit }) => {\n  const [problem, setProblem] = useState({});\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [timeUsed, setTimeUsed] = useState(0);\n\n  const generateMathProblem = (maxDigits, operations) => {\n    const availableOperators = [];\n    if (operations.addition) availableOperators.push('+');\n    if (operations.subtraction) availableOperators.push('-');\n    if (operations.multiplication) availableOperators.push('*');\n    if (operations.division) availableOperators.push('/');\n\n    const maxNumber = Math.pow(10, maxDigits) - 1;\n    const num1 = Math.floor(Math.random() * maxNumber) + 1;\n    const num2 = Math.floor(Math.random() * maxNumber) + 1;\n    const operator =\n      availableOperators[\n      Math.floor(Math.random() * availableOperators.length)\n      ];\n\n    let problem;\n    let answer;\n\n    if (operator === '/') {\n      let divisor, dividend;\n      do {\n        divisor = Math.floor(Math.random() * maxNumber) + 1;\n        dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n      } while (dividend > maxNumber || divisor > maxNumber);\n\n      problem = `${dividend} ${operator} ${divisor}`;\n      answer = dividend / divisor;\n    } else {\n      problem = `${num1} ${operator} ${num2}`;\n      answer = eval(problem); // Use eval cautiously\n    }\n\n    return { problem, answer };\n  };\n\n\n  useEffect(() => {\n    setProblem(generateMathProblem(maxDigits, operations));\n\n    if (mode === 'time') {\n      const timer = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            onGameOver(score);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n    if (parseFloat(e.target.value) === problem.answer) {\n      const endTime = Date.now();\n      const timeUsed = (endTime - startTime) / 1000; // Time used in seconds\n      setTimeUsed(timeUsed);\n\n      if (mode === 'questions') {\n        const [status, setStatus] = useState('false');\nconst [currentTime, setCurrentTime] = useState(0);\n\n        createTimer({\n          duration: 2000,\n          onComplete: self => $status.innerHTML = 'true',\n          onUpdate: self => $time.innerHTML = self.currentTime\n        });\n        setScore((prev) => parseFloat((prev + timeUsed).toFixed(2))); // Accumulate time used as score and round to two decimal points\n      } else {\n        setScore((prev) => prev + 1); // Increment score normally\n      }\n\n      setQuestionsAnswered((prev) => prev + 1);\n      setProblem(generateMathProblem(maxDigits, operations));\n      setUserInput('');\n      setStartTime(Date.now()); // Reset start time for the next question\n    }\n  };\n\n\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(score);\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n\n  return (\n    <div>\n      <button className=\"bt\" onClick={onExit} style={{ position: 'absolute', top: 10, right: 10 }}>\n        <span class=\"shadow\"></span>\n        <span class=\"depth\"></span>\n        <span class=\"content\">Exit</span>\n        Exit\n      </button>\n\n      {mode === 'questions' && <h2>Time Used: {timeUsed}s </h2>}\n      {mode === 'time' && <h2>Score: {score}</h2>}\n\n      <div className=\"problem-container\">\n\n        {mode === 'time' && <h3>Time Left: {timeLeft}s</h3>}\n        {mode === 'questions' && (\n          <div>\n            <div class=\"large row\">\n              <div class=\"col\">\n                <pre class=\"large log row\">\n                  <span class=\"label\">completed</span>\n                  <span class=\"status value\">false</span>\n                </pre>\n              </div>\n              <div class=\"col\">\n                <pre class=\"large log row\">\n                  <span class=\"label\">current time</span>\n                  <span class=\"time value lcd\">0</span>\n                </pre>\n              </div>\n            </div>\n            <h3>Questions Answered: {questionsAnswered}/{questionCount}</h3>\n          </div>\n\n        )}\n        <div className=\"qcontainer\">\n          <p1>{problem.problem}</p1>\n          <input\n            type=\"number\"\n            value={userInput}\n            onChange={handleInputChange}\n            autoFocus\n          />\n        </div>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}