{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Settings.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=_ref=>{let{mode,operations,timeLimit,questionCount,maxDigits,onGameOver,onExit}=_ref;const[problem,setProblem]=useState({});const[userInput,setUserInput]=useState('');const[score,setScore]=useState(0);const[timeLeft,setTimeLeft]=useState(timeLimit);const[questionsAnswered,setQuestionsAnswered]=useState(0);const generateMathProblem=(maxDigits,operations)=>{const availableOperators=[];if(operations.addition)availableOperators.push('+');if(operations.subtraction)availableOperators.push('-');if(operations.multiplication)availableOperators.push('*');if(operations.division)availableOperators.push('/');const maxNumber=Math.pow(10,maxDigits)-1;const num1=Math.floor(Math.random()*maxNumber)+1;const num2=Math.floor(Math.random()*maxNumber)+1;const operator=availableOperators[Math.floor(Math.random()*availableOperators.length)];let problem;let answer;if(operator==='/'){let divisor,dividend;do{divisor=Math.floor(Math.random()*maxNumber)+1;dividend=divisor*(Math.floor(Math.random()*maxNumber)+1);}while(dividend>maxNumber||divisor>maxNumber);problem=\"\".concat(dividend,\" \").concat(operator,\" \").concat(divisor);answer=dividend/divisor;}else{problem=\"\".concat(num1,\" \").concat(operator,\" \").concat(num2);answer=eval(problem);// Use eval cautiously\n}return{problem,answer};};useEffect(()=>{setProblem(generateMathProblem(maxDigits,operations));if(mode==='time'){const timer=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){clearInterval(timer);onGameOver(score);}return prev-1;});},1000);return()=>clearInterval(timer);}},[mode,onGameOver,score,timeLimit,maxDigits,operations]);const handleInputChange=e=>{setUserInput(e.target.value);if(parseFloat(e.target.value)===problem.answer){setScore(prev=>prev+1);setQuestionsAnswered(prev=>prev+1);setProblem(generateMathProblem(maxDigits,operations));setUserInput('');}};useEffect(()=>{if(mode==='questions'&&questionsAnswered>=questionCount){onGameOver(timeLeft);}},[questionsAnswered,mode,questionCount,onGameOver,timeLeft]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"bt\",onClick:onExit,style:{position:'absolute',top:10,right:10},children:[/*#__PURE__*/_jsx(\"span\",{class:\"shadow\"}),/*#__PURE__*/_jsx(\"span\",{class:\"depth\"}),/*#__PURE__*/_jsx(\"span\",{class:\"content\",children:\"Exit\"}),\"Exit\"]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Score: \",score]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-container\",children:[mode==='time'&&/*#__PURE__*/_jsxs(\"h3\",{children:[\"Time Left: \",timeLeft,\"s\"]}),mode==='questions'&&/*#__PURE__*/_jsxs(\"h3\",{children:[\"Questions Answered: \",questionsAnswered,\"/\",questionCount]}),/*#__PURE__*/_jsxs(\"div\",{className:\"qcontainer\",children:[/*#__PURE__*/_jsx(\"p1\",{children:problem.problem}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:userInput,onChange:handleInputChange,autoFocus:true})]})]})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Game","_ref","mode","operations","timeLimit","questionCount","maxDigits","onGameOver","onExit","problem","setProblem","userInput","setUserInput","score","setScore","timeLeft","setTimeLeft","questionsAnswered","setQuestionsAnswered","generateMathProblem","availableOperators","addition","push","subtraction","multiplication","division","maxNumber","Math","pow","num1","floor","random","num2","operator","length","answer","divisor","dividend","concat","eval","timer","setInterval","prev","clearInterval","handleInputChange","e","target","value","parseFloat","children","className","onClick","style","position","top","right","class","type","onChange","autoFocus"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\n\nconst Game = ({ mode, operations, timeLimit, questionCount, maxDigits, onGameOver, onExit }) => {\n    const [problem, setProblem] = useState({});\n    const [userInput, setUserInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(timeLimit);\n    const [questionsAnswered, setQuestionsAnswered] = useState(0);\n\n    const generateMathProblem = (maxDigits, operations) => {\n        const availableOperators = [];\n        if (operations.addition) availableOperators.push('+');\n        if (operations.subtraction) availableOperators.push('-');\n        if (operations.multiplication) availableOperators.push('*');\n        if (operations.division) availableOperators.push('/');\n      \n        const maxNumber = Math.pow(10, maxDigits) - 1;\n        const num1 = Math.floor(Math.random() * maxNumber) + 1;\n        const num2 = Math.floor(Math.random() * maxNumber) + 1;\n        const operator =\n          availableOperators[\n            Math.floor(Math.random() * availableOperators.length)\n          ];\n      \n        let problem;\n        let answer;\n      \n        if (operator === '/') {\n          let divisor, dividend;\n          do {\n            divisor = Math.floor(Math.random() * maxNumber) + 1;\n            dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n          } while (dividend > maxNumber || divisor > maxNumber);\n        \n          problem = `${dividend} ${operator} ${divisor}`;\n          answer = dividend / divisor;\n        } else {\n          problem = `${num1} ${operator} ${num2}`;\n          answer = eval(problem); // Use eval cautiously\n        }\n      \n        return { problem, answer };\n      };\n      \n\n  \n\n      useEffect(() => {\n        setProblem(generateMathProblem(maxDigits, operations));\n    \n        if (mode === 'time') {\n          const timer = setInterval(() => {\n            setTimeLeft((prev) => {\n              if (prev <= 1) {\n                clearInterval(timer);\n                onGameOver(score);\n              }\n              return prev - 1;\n            });\n          }, 1000);\n          return () => clearInterval(timer);\n        }\n      }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n\n      const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n        if (parseFloat(e.target.value) === problem.answer) {\n          setScore((prev) => prev + 1);\n          setQuestionsAnswered((prev) => prev + 1);\n          setProblem(generateMathProblem(maxDigits, operations));\n          setUserInput('');\n        }\n      };\n    \n\n      useEffect(() => {\n        if (mode === 'questions' && questionsAnswered >= questionCount) {\n          onGameOver(timeLeft);\n        }\n      }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n    \n      return (\n        <div>\n          <button className=\"bt\" onClick={onExit} style={{ position: 'absolute', top: 10, right: 10 }}>\n            <span class=\"shadow\"></span>\n            <span class=\"depth\"></span>\n            <span class=\"content\">Exit</span>\n            Exit\n          </button>\n          <h2>Score: {score}</h2>\n\n          <div className=\"problem-container\">\n\n          {mode === 'time' && <h3>Time Left: {timeLeft}s</h3>}\n          {mode === 'questions' && (\n            <h3>Questions Answered: {questionsAnswered}/{questionCount}</h3>\n          )}\n          <div className=\"qcontainer\">\n          <p1>{problem.problem}</p1>\n          <input\n            type=\"number\"\n            value={userInput}\n            onChange={handleInputChange}\n            autoFocus\n          />\n          </div>\n\n          </div>\n\n        </div>\n      );\n    };\n    \n    export default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}