{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/react/arithmetic/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [error, setError] = useState(''); // Add error state\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    // Check if at least one operation is selected\n    if (!selectedOperations.addition && !selectedOperations.subtraction && !selectedOperations.multiplication && !selectedOperations.division) {\n      setError('Please select at least one operation.');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    } else {\n      setError(''); // Clear the error message\n    }\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n    setIsGameOver(false);\n  };\n  const handleGameOver = finalResult => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n    setIsGameOver(true);\n  };\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n    setIsGameOver(false); // Reset game over state\n  };\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n    setIsGameOver(false); // Reset game over state\n  };\n  const handleCloseError = () => {\n    setError(''); // Clear the error message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [!mode && !isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Settings, {\n        onStart: handleStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseError,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), mode && !isGameOver && /*#__PURE__*/_jsxDEV(Game, {\n      mode: mode,\n      operations: operations,\n      timeLimit: timeLimit,\n      questionCount: questionCount,\n      maxDigits: maxDigits,\n      onGameOver: handleGameOver,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: handlePlayAgain,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"depth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), \"Play Again\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uWAlVN5QOCTDYMP0VbuDQu79Kmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Settings","Game","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","operations","setOperations","timeLimit","setTimeLimit","questionCount","setQuestionCount","maxDigits","setMaxDigits","result","setResult","isGameOver","setIsGameOver","error","setError","handleStart","selectedMode","selectedOperations","selectedTimeLimit","selectedQuestionCount","selectedMaxDigits","addition","subtraction","multiplication","division","children","fileName","_jsxFileName","lineNumber","columnNumber","handleGameOver","finalResult","handleExit","handlePlayAgain","handleCloseError","className","onStart","onClick","onGameOver","onExit","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\n\nconst App = () => {\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [error, setError] = useState(''); // Add error state\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    // Check if at least one operation is selected\n    if (!selectedOperations.addition && !selectedOperations.subtraction && !selectedOperations.multiplication && !selectedOperations.division) {\n      setError('Please select at least one operation.');\n      return(\n        <div><h1>hi</h1></div>\n      );\n    }\n    else{\n      setError(''); // Clear the error message\n    }\n\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n    setIsGameOver(false);\n  };\n\n  const handleGameOver = (finalResult) => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n    setIsGameOver(true);\n  };\n\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handleCloseError = () => {\n    setError(''); // Clear the error message\n  };\n\n  return (\n    <div className='App-header'>\n      {!mode && !isGameOver && (\n        <>\n          <Settings onStart={handleStart} />\n          {error && (\n            <div className=\"error-popup\">\n              <p>{error}</p>\n              <button onClick={handleCloseError}>Close</button>\n            </div>\n          )}\n        </>\n      )}\n      {mode && !isGameOver && (\n        <Game\n          mode={mode}\n          operations={operations}\n          timeLimit={timeLimit}\n          questionCount={questionCount}\n          maxDigits={maxDigits}\n          onGameOver={handleGameOver}\n          onExit={handleExit}\n        />\n      )}\n      {isGameOver && (\n        <div className=\"problem-container\">\n          <h1>Game Over</h1>\n          <p>Your Score: {result}</p>\n          <button className=\"bt\" onClick={handlePlayAgain}>\n            <span className=\"shadow\"></span>\n            <span className=\"depth\"></span>\n            <span className=\"content\">Play Again</span>\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMyB,WAAW,GAAGA,CAACC,YAAY,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,iBAAiB,KAAK;IACrH;IACA,IAAI,CAACH,kBAAkB,CAACI,QAAQ,IAAI,CAACJ,kBAAkB,CAACK,WAAW,IAAI,CAACL,kBAAkB,CAACM,cAAc,IAAI,CAACN,kBAAkB,CAACO,QAAQ,EAAE;MACzIV,QAAQ,CAAC,uCAAuC,CAAC;MACjD,oBACEpB,OAAA;QAAA+B,QAAA,eAAK/B,OAAA;UAAA+B,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAE1B,CAAC,MACG;MACFf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;IAEAd,OAAO,CAACgB,YAAY,CAAC;IACrBd,aAAa,CAACe,kBAAkB,CAAC;IACjCb,YAAY,CAACc,iBAAiB,CAAC;IAC/BZ,gBAAgB,CAACa,qBAAqB,CAAC;IACvCX,YAAY,CAACY,iBAAiB,CAAC;IAC/BV,SAAS,CAAC,IAAI,CAAC;IACfE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMkB,cAAc,GAAIC,WAAW,IAAK;IACtCrB,SAAS,CAACqB,WAAW,CAAC;IACtB/B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACfY,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACvBhC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACfU,SAAS,CAAC,IAAI,CAAC;IACfE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMqB,eAAe,GAAGA,CAAA,KAAM;IAC5BjC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACfU,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACjBE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMsB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEpB,OAAA;IAAKyC,SAAS,EAAC,YAAY;IAAAV,QAAA,GACxB,CAAC1B,IAAI,IAAI,CAACY,UAAU,iBACnBjB,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACE/B,OAAA,CAACH,QAAQ;QAAC6C,OAAO,EAAErB;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjChB,KAAK,iBACJnB,OAAA;QAAKyC,SAAS,EAAC,aAAa;QAAAV,QAAA,gBAC1B/B,OAAA;UAAA+B,QAAA,EAAIZ;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdnC,OAAA;UAAQ2C,OAAO,EAAEH,gBAAiB;UAAAT,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACN;IAAA,eACD,CACH,EACA9B,IAAI,IAAI,CAACY,UAAU,iBAClBjB,OAAA,CAACF,IAAI;MACHO,IAAI,EAAEA,IAAK;MACXE,UAAU,EAAEA,UAAW;MACvBE,SAAS,EAAEA,SAAU;MACrBE,aAAa,EAAEA,aAAc;MAC7BE,SAAS,EAAEA,SAAU;MACrB+B,UAAU,EAAER,cAAe;MAC3BS,MAAM,EAAEP;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACF,EACAlB,UAAU,iBACTjB,OAAA;MAAKyC,SAAS,EAAC,mBAAmB;MAAAV,QAAA,gBAChC/B,OAAA;QAAA+B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBnC,OAAA;QAAA+B,QAAA,GAAG,cAAY,EAAChB,MAAM;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BnC,OAAA;QAAQyC,SAAS,EAAC,IAAI;QAACE,OAAO,EAAEJ,eAAgB;QAAAR,QAAA,gBAC9C/B,OAAA;UAAMyC,SAAS,EAAC;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCnC,OAAA;UAAMyC,SAAS,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BnC,OAAA;UAAMyC,SAAS,EAAC,SAAS;UAAAV,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,cAE7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA3FID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA6FT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}