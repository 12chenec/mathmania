{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/react/arithmetic/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  mode,\n  operations,\n  timeLimit,\n  questionCount,\n  maxDigits,\n  onGameOver,\n  onExit\n}) => {\n  _s();\n  const [problem, setProblem] = useState({});\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const generateMathProblem = (maxDigits, operations) => {\n    const availableOperators = [];\n    if (operations.addition) availableOperators.push('+');\n    if (operations.subtraction) availableOperators.push('-');\n    if (operations.multiplication) availableOperators.push('*');\n    if (operations.division) availableOperators.push('/');\n    const maxNumber = Math.pow(10, maxDigits) - 1;\n    const num1 = Math.floor(Math.random() * maxNumber) + 1;\n    const num2 = Math.floor(Math.random() * maxNumber) + 1;\n    const operator = availableOperators[Math.floor(Math.random() * availableOperators.length)];\n    let problem;\n    let answer;\n    if (operator === '/') {\n      const dividend = num1 * num2; // Ensure num1 is a multiple of num2\n      problem = `${dividend} ${operator} ${num1}`;\n      answer = num2;\n    } else {\n      problem = `${num1} ${operator} ${num2}`;\n      answer = eval(problem); // Use eval cautiously\n    }\n    return {\n      problem,\n      answer\n    };\n  };\n  useEffect(() => {\n    setProblem(generateMathProblem(maxDigits, operations));\n    if (mode === 'time') {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            onGameOver(score);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (parseFloat(e.target.value) === problem.answer) {\n      setScore(prev => prev + 1);\n      setQuestionsAnswered(prev => prev + 1);\n      setProblem(generateMathProblem(maxDigits, operations));\n      setUserInput('');\n    }\n  };\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(timeLeft);\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: onExit,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"depth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"content\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), \"Exit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), mode === 'time' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Time Left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Questions Answered: \", questionsAnswered, \"/\", questionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.problem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: userInput,\n      onChange: handleInputChange,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"UnfBp1s9ZRWAQOSgf3GV/6/yFfY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Game","mode","operations","timeLimit","questionCount","maxDigits","onGameOver","onExit","_s","problem","setProblem","userInput","setUserInput","score","setScore","timeLeft","setTimeLeft","questionsAnswered","setQuestionsAnswered","generateMathProblem","availableOperators","addition","push","subtraction","multiplication","division","maxNumber","Math","pow","num1","floor","random","num2","operator","length","answer","dividend","eval","timer","setInterval","prev","clearInterval","handleInputChange","e","target","value","parseFloat","children","className","onClick","style","position","top","right","class","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","autoFocus","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\n\nconst Game = ({ mode, operations, timeLimit, questionCount, maxDigits, onGameOver, onExit }) => {\n    const [problem, setProblem] = useState({});\n    const [userInput, setUserInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(timeLimit);\n    const [questionsAnswered, setQuestionsAnswered] = useState(0);\n\n    const generateMathProblem = (maxDigits, operations) => {\n        const availableOperators = [];\n        if (operations.addition) availableOperators.push('+');\n        if (operations.subtraction) availableOperators.push('-');\n        if (operations.multiplication) availableOperators.push('*');\n        if (operations.division) availableOperators.push('/');\n      \n        const maxNumber = Math.pow(10, maxDigits) - 1;\n        const num1 = Math.floor(Math.random() * maxNumber) + 1;\n        const num2 = Math.floor(Math.random() * maxNumber) + 1;\n        const operator =\n          availableOperators[\n            Math.floor(Math.random() * availableOperators.length)\n          ];\n      \n        let problem;\n        let answer;\n      \n        if (operator === '/') {\n          const dividend = num1 * num2; // Ensure num1 is a multiple of num2\n          problem = `${dividend} ${operator} ${num1}`;\n          answer = num2;\n        } else {\n          problem = `${num1} ${operator} ${num2}`;\n          answer = eval(problem); // Use eval cautiously\n        }\n      \n        return { problem, answer };\n      };\n      \n\n  \n\n      useEffect(() => {\n        setProblem(generateMathProblem(maxDigits, operations));\n    \n        if (mode === 'time') {\n          const timer = setInterval(() => {\n            setTimeLeft((prev) => {\n              if (prev <= 1) {\n                clearInterval(timer);\n                onGameOver(score);\n              }\n              return prev - 1;\n            });\n          }, 1000);\n          return () => clearInterval(timer);\n        }\n      }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n\n      const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n        if (parseFloat(e.target.value) === problem.answer) {\n          setScore((prev) => prev + 1);\n          setQuestionsAnswered((prev) => prev + 1);\n          setProblem(generateMathProblem(maxDigits, operations));\n          setUserInput('');\n        }\n      };\n    \n\n      useEffect(() => {\n        if (mode === 'questions' && questionsAnswered >= questionCount) {\n          onGameOver(timeLeft);\n        }\n      }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n    \n      return (\n        <div>\n          <button className=\"btn\" onClick={onExit} style={{ position: 'absolute', top: 10, right: 10 }}>\n            <span class=\"shadow\"></span>\n            <span class=\"depth\"></span>\n            <span class=\"content\">Exit</span>\n            Exit\n          </button>\n          <h2>Score: {score}</h2>\n          {mode === 'time' && <h3>Time Left: {timeLeft}s</h3>}\n          {mode === 'questions' && (\n            <h3>Questions Answered: {questionsAnswered}/{questionCount}</h3>\n          )}\n          <p>{problem.problem}</p>\n          <input\n            type=\"number\"\n            value={userInput}\n            onChange={handleInputChange}\n            autoFocus\n          />\n        </div>\n      );\n    };\n    \n    export default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}