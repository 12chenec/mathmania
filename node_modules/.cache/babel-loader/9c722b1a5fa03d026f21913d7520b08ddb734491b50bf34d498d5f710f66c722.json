{"ast":null,"code":"import React,{useState}from'react';import Settings from'./Settings';import Game from'./Game';import'./App.css';import{app,analytics}from'./firebase';// Import Firebase\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const[mode,setMode]=useState(null);const[operations,setOperations]=useState({});const[timeLimit,setTimeLimit]=useState(30);const[questionCount,setQuestionCount]=useState(10);const[maxDigits,setMaxDigits]=useState(2);const[result,setResult]=useState(null);const[isGameOver,setIsGameOver]=useState(false);const[error,setError]=useState('');// Add error state\nconst handleStart=(selectedMode,selectedOperations,selectedTimeLimit,selectedQuestionCount,selectedMaxDigits)=>{// Check if at least one operation is selected\nif(!selectedOperations.addition&&!selectedOperations.subtraction&&!selectedOperations.multiplication&&!selectedOperations.division){setError('Please select at least one operation.');return;}else{setError('');// Clear the error message\n}setMode(selectedMode);setOperations(selectedOperations);setTimeLimit(selectedTimeLimit);setQuestionCount(selectedQuestionCount);setMaxDigits(selectedMaxDigits);setResult(null);setIsGameOver(false);};const handleGameOver=finalResult=>{setResult(finalResult);setMode(null);// Exit game mode after showing results\nsetIsGameOver(true);};const handleExit=()=>{setMode(null);// Go back to settings screen\nsetResult(null);setIsGameOver(false);// Reset game over state\n};const handlePlayAgain=()=>{setMode(null);// Reset the mode\nsetResult(null);// Clear previous result\nsetIsGameOver(false);// Reset game over state\n};const handleCloseError=()=>{setError('');// Clear the error message\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[!mode&&!isGameOver&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Settings,{onStart:handleStart}),error&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-overlay\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-popup\",children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCloseError,children:\"Close\"})]})]})]}),mode&&!isGameOver&&/*#__PURE__*/_jsx(Game,{mode:mode,operations:operations,timeLimit:timeLimit,questionCount:questionCount,maxDigits:maxDigits,onGameOver:handleGameOver,onExit:handleExit}),isGameOver&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Over\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",result]}),/*#__PURE__*/_jsxs(\"button\",{className:\"bt\",onClick:handlePlayAgain,children:[/*#__PURE__*/_jsx(\"span\",{className:\"shadow\"}),/*#__PURE__*/_jsx(\"span\",{className:\"depth\"}),/*#__PURE__*/_jsx(\"span\",{className:\"content\",children:\"Play Again\"}),\"Play Again\"]})]})]});};export default App;","map":{"version":3,"names":["React","useState","Settings","Game","app","analytics","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","operations","setOperations","timeLimit","setTimeLimit","questionCount","setQuestionCount","maxDigits","setMaxDigits","result","setResult","isGameOver","setIsGameOver","error","setError","handleStart","selectedMode","selectedOperations","selectedTimeLimit","selectedQuestionCount","selectedMaxDigits","addition","subtraction","multiplication","division","handleGameOver","finalResult","handleExit","handlePlayAgain","handleCloseError","className","children","onStart","onClick","onGameOver","onExit"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\nimport { app, analytics } from './firebase'; // Import Firebase\n\nconst App = () => {\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [error, setError] = useState(''); // Add error state\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    // Check if at least one operation is selected\n    if (!selectedOperations.addition && !selectedOperations.subtraction && !selectedOperations.multiplication && !selectedOperations.division) {\n      setError('Please select at least one operation.');\n      return;\n    }\n    else {\n      setError(''); // Clear the error message\n    }\n\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n    setIsGameOver(false);\n\n  };\n\n  const handleGameOver = (finalResult) => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n    setIsGameOver(true);\n  };\n\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handleCloseError = () => {\n    setError(''); // Clear the error message\n  };\n\n  return (\n    <div className='App-header'>\n      {!mode && !isGameOver && (\n        <>\n        <Settings onStart={handleStart} />\n        {error && (\n          <>\n            <div className=\"error-overlay\"></div>\n            <div className=\"error-popup\">\n              <p>{error}</p>\n              <button onClick={handleCloseError}>Close</button>\n            </div>\n          </>\n        )}\n      </>\n      )}\n      {mode && !isGameOver && (\n        <Game\n          mode={mode}\n          operations={operations}\n          timeLimit={timeLimit}\n          questionCount={questionCount}\n          maxDigits={maxDigits}\n          onGameOver={handleGameOver}\n          onExit={handleExit}\n        />\n      )}\n      {isGameOver && (\n        <div className=\"problem-container\">\n          <h1>Game Over</h1>\n          <p>Your Score: {result}</p>\n          <button className=\"bt\" onClick={handlePlayAgain}>\n            <span className=\"shadow\"></span>\n            <span className=\"depth\"></span>\n            <span className=\"content\">Play Again</span>\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}