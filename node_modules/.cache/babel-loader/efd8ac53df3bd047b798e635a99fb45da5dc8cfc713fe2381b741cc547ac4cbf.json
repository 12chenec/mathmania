{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/coding/mathmania/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\nimport { app, analytics } from './firebase'; // Import Firebase\nimport click from './sound.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [error, setError] = useState(''); // Add error state\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    // Check if at least one operation is selected\n    if (!selectedOperations.addition && !selectedOperations.subtraction && !selectedOperations.multiplication && !selectedOperations.division) {\n      setError('Please select at least one operation.');\n      return;\n    } else {\n      setError(''); // Clear the error message\n    }\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n    setIsGameOver(false);\n  };\n  const handleGameOver = finalResult => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n    setIsGameOver(true);\n  };\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n    setIsGameOver(false); // Reset game over state\n  };\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n    setIsGameOver(false); // Reset game over state\n  };\n  const handleCloseError = () => {\n    setError(''); // Clear the error message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [!mode && !isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Settings, {\n        onStart: handleStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseError,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), mode && !isGameOver && /*#__PURE__*/_jsxDEV(Game, {\n      mode: mode,\n      operations: operations,\n      timeLimit: timeLimit,\n      questionCount: questionCount,\n      maxDigits: maxDigits,\n      onGameOver: handleGameOver,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt\",\n        onClick: () => {\n          handlePlayAgain();\n          click();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"depth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \"Play Again\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uWAlVN5QOCTDYMP0VbuDQu79Kmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Settings","Game","app","analytics","click","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","operations","setOperations","timeLimit","setTimeLimit","questionCount","setQuestionCount","maxDigits","setMaxDigits","result","setResult","isGameOver","setIsGameOver","error","setError","handleStart","selectedMode","selectedOperations","selectedTimeLimit","selectedQuestionCount","selectedMaxDigits","addition","subtraction","multiplication","division","handleGameOver","finalResult","handleExit","handlePlayAgain","handleCloseError","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onGameOver","onExit","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/coding/mathmania/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\nimport { app, analytics } from './firebase'; // Import Firebase\nimport click from './sound.js';\n\nconst App = () => {\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [error, setError] = useState(''); // Add error state\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    // Check if at least one operation is selected\n    if (!selectedOperations.addition && !selectedOperations.subtraction && !selectedOperations.multiplication && !selectedOperations.division) {\n      setError('Please select at least one operation.');\n      return;\n    }\n    else {\n      setError(''); // Clear the error message\n    }\n\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n    setIsGameOver(false);\n\n  };\n\n  const handleGameOver = (finalResult) => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n    setIsGameOver(true);\n  };\n\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n    setIsGameOver(false); // Reset game over state\n  };\n\n  const handleCloseError = () => {\n    setError(''); // Clear the error message\n  };\n\n  return (\n    <div className='App-header'>\n      {!mode && !isGameOver && (\n        <>\n          <Settings onStart={handleStart} />\n          {error && (\n            <>\n              <div className=\"error-overlay\"></div>\n              <div className=\"error-popup\">\n                <p>{error}</p>\n                <button onClick={handleCloseError}>Close</button>\n              </div>\n            </>\n          )}\n        </>\n      )}\n      {mode && !isGameOver && (\n        <Game\n          mode={mode}\n          operations={operations}\n          timeLimit={timeLimit}\n          questionCount={questionCount}\n          maxDigits={maxDigits}\n          onGameOver={handleGameOver}\n          onExit={handleExit}\n        />\n      )}\n      {isGameOver && (\n        <div className=\"result-container\">\n          <h1>Game Over</h1>\n          <header className=\"result\">{result}</header>\n          <button className=\"bt\" onClick={() => { handlePlayAgain(); click(); }}>\n            <span className=\"shadow\"></span>\n            <span className=\"depth\"></span>\n            <span className=\"content\">Play Again</span>\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}