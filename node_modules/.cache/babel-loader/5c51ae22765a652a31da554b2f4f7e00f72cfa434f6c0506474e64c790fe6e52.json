{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/react/arithmetic/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  mode,\n  operations,\n  timeLimit,\n  questionCount,\n  maxDigits,\n  onGameOver,\n  onExit\n}) => {\n  _s();\n  const [problem, setProblem] = useState({});\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(timeLimit);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [timeUsed, setTimeUsed] = useState(0);\n  const generateMathProblem = (maxDigits, operations) => {\n    const availableOperators = [];\n    if (operations.addition) availableOperators.push('+');\n    if (operations.subtraction) availableOperators.push('-');\n    if (operations.multiplication) availableOperators.push('*');\n    if (operations.division) availableOperators.push('/');\n    const maxNumber = Math.pow(10, maxDigits) - 1;\n    const num1 = Math.floor(Math.random() * maxNumber) + 1;\n    const num2 = Math.floor(Math.random() * maxNumber) + 1;\n    const operator = availableOperators[Math.floor(Math.random() * availableOperators.length)];\n    let problem;\n    let answer;\n    if (operator === '/') {\n      let divisor, dividend;\n      do {\n        divisor = Math.floor(Math.random() * maxNumber) + 1;\n        dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n      } while (dividend > maxNumber || divisor > maxNumber);\n      problem = `${dividend} ${operator} ${divisor}`;\n      answer = dividend / divisor;\n    } else {\n      problem = `${num1} ${operator} ${num2}`;\n      answer = eval(problem); // Use eval cautiously\n    }\n    return {\n      problem,\n      answer\n    };\n  };\n  useEffect(() => {\n    setProblem(generateMathProblem(maxDigits, operations));\n    if (mode === 'time') {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            onGameOver(score);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n  useEffect(() => {\n    if (mode === 'questions') {\n      const timer = setInterval(() => {\n        const elapsedTime = (Date.now() - startTime) / 1000; // Time in seconds\n        setScore(elapsedTime);\n      }, 100); // Update every 100ms for smoother timer\n      return () => clearInterval(timer);\n    }\n  }, [mode, startTime]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (parseFloat(e.target.value) === problem.answer) {\n      setQuestionsAnswered(prev => prev + 1);\n      setUserInput('');\n      setStartTime(Date.now()); // Reset start time for the next question\n    }\n  };\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(score); // Use elapsed time as the final score\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, score]);\n  useEffect(() => {\n    if (mode === 'questions' && questionsAnswered >= questionCount) {\n      onGameOver(score);\n    }\n  }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bt\",\n      onClick: onExit,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"depth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"content\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), \"Exit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Used: \", timeUsed, \"s \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 36\n    }, this), mode === 'time' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-container\",\n      children: [mode === 'time' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 31\n      }, this), mode === 'questions' && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Questions Answered: \", questionsAnswered, \"/\", questionCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p1\", {\n          children: problem.problem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput,\n          onChange: handleInputChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"rzYSLXuULYwllKwH2oP8gAd/WeE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Game","mode","operations","timeLimit","questionCount","maxDigits","onGameOver","onExit","_s","problem","setProblem","userInput","setUserInput","score","setScore","timeLeft","setTimeLeft","questionsAnswered","setQuestionsAnswered","startTime","setStartTime","Date","now","timeUsed","setTimeUsed","generateMathProblem","availableOperators","addition","push","subtraction","multiplication","division","maxNumber","Math","pow","num1","floor","random","num2","operator","length","answer","divisor","dividend","eval","timer","setInterval","prev","clearInterval","elapsedTime","handleInputChange","e","target","value","parseFloat","children","className","onClick","style","position","top","right","class","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","autoFocus","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\n\nconst Game = ({ mode, operations, timeLimit, questionCount, maxDigits, onGameOver, onExit }) => {\n    const [problem, setProblem] = useState({});\n    const [userInput, setUserInput] = useState('');\n    const [score, setScore] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(timeLimit);\n    const [questionsAnswered, setQuestionsAnswered] = useState(0);\n    const [startTime, setStartTime] = useState(Date.now());\n    const [timeUsed, setTimeUsed] = useState(0);\n\n    const generateMathProblem = (maxDigits, operations) => {\n        const availableOperators = [];\n        if (operations.addition) availableOperators.push('+');\n        if (operations.subtraction) availableOperators.push('-');\n        if (operations.multiplication) availableOperators.push('*');\n        if (operations.division) availableOperators.push('/');\n      \n        const maxNumber = Math.pow(10, maxDigits) - 1;\n        const num1 = Math.floor(Math.random() * maxNumber) + 1;\n        const num2 = Math.floor(Math.random() * maxNumber) + 1;\n        const operator =\n          availableOperators[\n            Math.floor(Math.random() * availableOperators.length)\n          ];\n      \n        let problem;\n        let answer;\n      \n        if (operator === '/') {\n          let divisor, dividend;\n          do {\n            divisor = Math.floor(Math.random() * maxNumber) + 1;\n            dividend = divisor * (Math.floor(Math.random() * maxNumber) + 1);\n          } while (dividend > maxNumber || divisor > maxNumber);\n        \n          problem = `${dividend} ${operator} ${divisor}`;\n          answer = dividend / divisor;\n        } else {\n          problem = `${num1} ${operator} ${num2}`;\n          answer = eval(problem); // Use eval cautiously\n        }\n      \n        return { problem, answer };\n      };\n      \n\n  \n\n      useEffect(() => {\n        setProblem(generateMathProblem(maxDigits, operations));\n    \n        if (mode === 'time') {\n          const timer = setInterval(() => {\n            setTimeLeft((prev) => {\n              if (prev <= 1) {\n                clearInterval(timer);\n                onGameOver(score);\n              }\n              return prev - 1;\n            });\n          }, 1000);\n          return () => clearInterval(timer);\n        }\n      }, [mode, onGameOver, score, timeLimit, maxDigits, operations]);\n      useEffect(() => {\n        if (mode === 'questions') {\n          const timer = setInterval(() => {\n            const elapsedTime = (Date.now() - startTime) / 1000; // Time in seconds\n            setScore(elapsedTime);\n          }, 100); // Update every 100ms for smoother timer\n          return () => clearInterval(timer);\n        }\n      }, [mode, startTime]);\n    \n      const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n        if (parseFloat(e.target.value) === problem.answer) {\n          setQuestionsAnswered((prev) => prev + 1);\n          setUserInput('');\n          setStartTime(Date.now()); // Reset start time for the next question\n        }\n      };\n    \n      useEffect(() => {\n        if (mode === 'questions' && questionsAnswered >= questionCount) {\n          onGameOver(score); // Use elapsed time as the final score\n        }\n      }, [questionsAnswered, mode, questionCount, onGameOver, score]);\n    \n\n      useEffect(() => {\n        if (mode === 'questions' && questionsAnswered >= questionCount) {\n          onGameOver(score);\n        }\n      }, [questionsAnswered, mode, questionCount, onGameOver, timeLeft]);\n    \n      return (\n        <div>\n          <button className=\"bt\" onClick={onExit} style={{ position: 'absolute', top: 10, right: 10 }}>\n            <span class=\"shadow\"></span>\n            <span class=\"depth\"></span>\n            <span class=\"content\">Exit</span>\n            Exit\n          </button>\n\n          {mode === 'questions' && <h2>Time Used: {timeUsed}s </h2>}\n          {mode ==='time' && <h2>Score: {score}</h2>}\n\n          <div className=\"problem-container\">\n\n          {mode === 'time' && <h3>Time Left: {timeLeft}s</h3>}\n          {mode === 'questions' && (\n            <h3>Questions Answered: {questionsAnswered}/{questionCount}</h3>\n          )}\n          <div className=\"qcontainer\">\n          <p1>{problem.problem}</p1>\n          <input\n            type=\"number\"\n            value={userInput}\n            onChange={handleInputChange}\n            autoFocus\n          />\n          </div>\n\n          </div>\n\n        </div>\n      );\n    };\n    \n    export default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}