{"ast":null,"code":"import React,{useState}from'react';import Settings from'./Settings';import Game from'./Game';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[mode,setMode]=useState(null);const[operations,setOperations]=useState({});const[timeLimit,setTimeLimit]=useState(30);const[questionCount,setQuestionCount]=useState(10);const[maxDigits,setMaxDigits]=useState(2);const[result,setResult]=useState(null);const handleStart=(selectedMode,selectedOperations,selectedTimeLimit,selectedQuestionCount,selectedMaxDigits)=>{setMode(selectedMode);setOperations(selectedOperations);setTimeLimit(selectedTimeLimit);setQuestionCount(selectedQuestionCount);setMaxDigits(selectedMaxDigits);setResult(null);};const handleGameOver=finalResult=>{setResult(finalResult);setMode(null);// Exit game mode after showing results\n};const handleExit=()=>{setMode(null);// Go back to settings screen\nsetResult(null);};const handlePlayAgain=()=>{setMode(null);// Reset the mode\nsetResult(null);// Clear previous result\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[!mode&&!result&&/*#__PURE__*/_jsx(Settings,{onStart:handleStart}),mode&&/*#__PURE__*/_jsx(Game,{mode:mode,operations:operations,timeLimit:timeLimit,questionCount:questionCount,maxDigits:maxDigits,onGameOver:handleGameOver,onExit:handleExit}),result!==null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Over\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",result]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePlayAgain,children:\"Play Again\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","Settings","Game","jsx","_jsx","jsxs","_jsxs","App","mode","setMode","operations","setOperations","timeLimit","setTimeLimit","questionCount","setQuestionCount","maxDigits","setMaxDigits","result","setResult","handleStart","selectedMode","selectedOperations","selectedTimeLimit","selectedQuestionCount","selectedMaxDigits","handleGameOver","finalResult","handleExit","handlePlayAgain","className","children","onStart","onGameOver","onExit","onClick"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\n\nconst App = () => {\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n  };\n\n  const handleGameOver = (finalResult) => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n  };\n\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n  };\n\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n  };\n\n  return (\n    <div className = 'App-header'>\n      {!mode && !result && (\n        <Settings onStart={handleStart} />\n      )}\n      {mode && (\n        <Game\n          mode={mode}\n          operations={operations}\n          timeLimit={timeLimit}\n          questionCount={questionCount}\n          maxDigits={maxDigits}\n          onGameOver={handleGameOver}\n          onExit={handleExit}\n        />\n      )}\n      {result !== null && (\n        <div>\n          <h1>Game Over</h1>\n          <p>Your Score: {result}</p>\n          <button onClick={handlePlayAgain}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAChD,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACc,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACkB,MAAM,CAAEC,SAAS,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAoB,WAAW,CAAGA,CAACC,YAAY,CAAEC,kBAAkB,CAAEC,iBAAiB,CAAEC,qBAAqB,CAAEC,iBAAiB,GAAK,CACrHhB,OAAO,CAACY,YAAY,CAAC,CACrBV,aAAa,CAACW,kBAAkB,CAAC,CACjCT,YAAY,CAACU,iBAAiB,CAAC,CAC/BR,gBAAgB,CAACS,qBAAqB,CAAC,CACvCP,YAAY,CAACQ,iBAAiB,CAAC,CAC/BN,SAAS,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,KAAM,CAAAO,cAAc,CAAIC,WAAW,EAAK,CACtCR,SAAS,CAACQ,WAAW,CAAC,CACtBlB,OAAO,CAAC,IAAI,CAAC,CAAE;AACjB,CAAC,CAED,KAAM,CAAAmB,UAAU,CAAGA,CAAA,GAAM,CACvBnB,OAAO,CAAC,IAAI,CAAC,CAAE;AACfU,SAAS,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,KAAM,CAAAU,eAAe,CAAGA,CAAA,GAAM,CAC5BpB,OAAO,CAAC,IAAI,CAAC,CAAE;AACfU,SAAS,CAAC,IAAI,CAAC,CAAE;AACnB,CAAC,CAED,mBACEb,KAAA,QAAKwB,SAAS,CAAG,YAAY,CAAAC,QAAA,EAC1B,CAACvB,IAAI,EAAI,CAACU,MAAM,eACfd,IAAA,CAACH,QAAQ,EAAC+B,OAAO,CAAEZ,WAAY,CAAE,CAClC,CACAZ,IAAI,eACHJ,IAAA,CAACF,IAAI,EACHM,IAAI,CAAEA,IAAK,CACXE,UAAU,CAAEA,UAAW,CACvBE,SAAS,CAAEA,SAAU,CACrBE,aAAa,CAAEA,aAAc,CAC7BE,SAAS,CAAEA,SAAU,CACrBiB,UAAU,CAAEP,cAAe,CAC3BQ,MAAM,CAAEN,UAAW,CACpB,CACF,CACAV,MAAM,GAAK,IAAI,eACdZ,KAAA,QAAAyB,QAAA,eACE3B,IAAA,OAAA2B,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBzB,KAAA,MAAAyB,QAAA,EAAG,cAAY,CAACb,MAAM,EAAI,CAAC,cAC3Bd,IAAA,WAAQ+B,OAAO,CAAEN,eAAgB,CAAAE,QAAA,CAAC,YAAU,CAAQ,CAAC,EAClD,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}