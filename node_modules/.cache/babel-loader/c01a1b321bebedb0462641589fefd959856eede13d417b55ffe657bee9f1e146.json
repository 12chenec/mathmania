{"ast":null,"code":"var _jsxFileName = \"/Users/christalchen/Documents/react/arithmetic/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n  };\n  const handleGameOver = finalResult => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n  };\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n  };\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [!mode && !result && /*#__PURE__*/_jsxDEV(Settings, {\n      onStart: handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), mode && /*#__PURE__*/_jsxDEV(Game, {\n      mode: mode,\n      operations: operations,\n      timeLimit: timeLimit,\n      questionCount: questionCount,\n      maxDigits: maxDigits,\n      onGameOver: handleGameOver,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"63w+klTZr2yy/tRi24UkRd9FXy0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Settings","Game","jsxDEV","_jsxDEV","App","_s","mode","setMode","operations","setOperations","timeLimit","setTimeLimit","questionCount","setQuestionCount","maxDigits","setMaxDigits","result","setResult","handleStart","selectedMode","selectedOperations","selectedTimeLimit","selectedQuestionCount","selectedMaxDigits","handleGameOver","finalResult","handleExit","handlePlayAgain","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onGameOver","onExit","onClick","_c","$RefreshReg$"],"sources":["/Users/christalchen/Documents/react/arithmetic/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Settings from './Settings';\nimport Game from './Game';\nimport './App.css';\n\nconst App = () => {\n  const [mode, setMode] = useState(null);\n  const [operations, setOperations] = useState({});\n  const [timeLimit, setTimeLimit] = useState(30);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [maxDigits, setMaxDigits] = useState(2);\n  const [result, setResult] = useState(null);\n\n  const handleStart = (selectedMode, selectedOperations, selectedTimeLimit, selectedQuestionCount, selectedMaxDigits) => {\n    setMode(selectedMode);\n    setOperations(selectedOperations);\n    setTimeLimit(selectedTimeLimit);\n    setQuestionCount(selectedQuestionCount);\n    setMaxDigits(selectedMaxDigits);\n    setResult(null);\n  };\n\n  const handleGameOver = (finalResult) => {\n    setResult(finalResult);\n    setMode(null); // Exit game mode after showing results\n  };\n\n  const handleExit = () => {\n    setMode(null); // Go back to settings screen\n    setResult(null);\n  };\n\n  const handlePlayAgain = () => {\n    setMode(null); // Reset the mode\n    setResult(null); // Clear previous result\n  };\n\n  return (\n    <div className = 'App-header'>\n      {!mode && !result && (\n        <Settings onStart={handleStart} />\n      )}\n      {mode && (\n        <Game\n          mode={mode}\n          operations={operations}\n          timeLimit={timeLimit}\n          questionCount={questionCount}\n          maxDigits={maxDigits}\n          onGameOver={handleGameOver}\n          onExit={handleExit}\n        />\n      )}\n      {result !== null && (\n        <div>\n          <h2>Game Over</h2>\n          <p>Your Score: {result}</p>\n          <button onClick={handlePlayAgain}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}